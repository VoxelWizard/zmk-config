/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "german_keymap.h"


//test

&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};

/ { 

// 0  1  2  3  4    5  6  7  8  9 
// 10 11 12 13 14   15 16 17 18 19 
// 20 21 22 23 24   25 26 27 28 29 
//          31 32   33 34

//test123

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <25>;
            key-positions = <4 14>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <25>;
            key-positions = <3 13>;
            bindings = <&kp TAB>;
        };
        
        combo_caps_lock {
            timeout-ms = <25>;
            key-positions = <5 15>;
            bindings = <&kp CAPSLOCK>;
        };
        
       combo_voldown {
            timeout-ms = <25>;
            key-positions = <23 24>;
            bindings = <&kp C_VOL_DN>;
        };

       combo_volup {
            timeout-ms = <25>;
            key-positions = <3 4>;
            bindings = <&kp C_VOL_UP>;
        };

       combo_play_pause {
            timeout-ms = <25>;
            key-positions = <21 22>;
            bindings = <&kp C_PLAY_PAUSE>;
        };

       combo_caps_word {
            timeout-ms = <25>;
            key-positions = <6 16>;
            bindings = <&caps_word>;
        };

       combo_F23 {
            timeout-ms = <25>;
            key-positions = <21 22 23>;
            bindings = <&kp F23>;
        };

       combo_quicktab {
            timeout-ms = <25>;
            key-positions = <14 24>;
            bindings = <&kp RA(TAB)>;
        };
            
       combo_quote {
            timeout-ms = <25>;
            key-positions = <20 21>;
            bindings = <&kp DE_DQUO>;
        };
        

    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp DE_J &kp DE_C &kp DE_Y &kp DE_F &kp DE_K 				&kp DE_Z &kp DE_L  &kp DE_COMM  &kp DE_U   &kp DE_Q
        &mt LGUI DE_R &mt LALT DE_S &mt LCTRL DE_T &mt LSHIFT DE_H &kp DE_D           &kp DE_M &mt RSHIFT DE_N &mt RCTRL DE_A &mt LALT DE_I &mt RGUI DE_O
		&kp DE_QUOT &kp DE_V &kp DE_G &kp DE_P &kp DE_B			        &kp DE_X &kp DE_W  &kp DE_DOT &kp DE_LABK &kp DE_MINS
          				&lt 4 ENTER &lt 2 SPC  					&lt 1 DE_E &lt 3 BSPC
		>;
		};

       		num_layer {
		bindings = <
		&kp NUM_9  &kp NUM_7    &kp NUM_5    &kp NUM_3    &kp DE_BSLS		&kp DE_PIPE &kp NUM_2 &kp NUM_4 &kp NUM_6 &kp NUM_8 
		&kp DE_LCBR    &kp DE_LPRN    &kp DE_EXLM  &kp NUM_1   &kp DE_ASTR 	&kp DE_PERC &kp NUM_0  &kp DE_QUES &kp DE_RPRN  &kp DE_RCBR 
		&kp DE_TILD   &kp DE_LBRC 	&kp DE_EQL &kp DE_PLUS  &kp DE_HASH 	       &kp DE_AMPR &kp DE_AT &kp DE_DOT &kp DE_RBRC &kp DE_MINS 
					    &kp DE_SLSH  &trans  					&trans &trans 
		>;
		};
		
		    nav_layer {
		bindings = <
		&none  &none &kp UP_ARROW &none &none 			            &none  &kp PAGE_UP &kp HOME &none &none 
		&none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none    &none &kp PAGE_DOWN &kp END  &none  &none
		&none  &none &none &none   &none    			&none &none &none &none  &none
					  &trans &trans  				&kp PRINTSCREEN  &none 
		>;
		};	
		
		    function_layer {
		bindings = <
		&kp F9  &kp F7    &kp F5    &kp F3    &none 			&none &kp F2   &kp F4   &kp F6  &kp F8
		&kp F15 &kp F13 &kp F11 &kp F1 &none  						&none &kp F10  &kp F12 &kp F14 &kp F16 
		&bt BT_CLR  &bt BT_PRV &none &bt BT_NXT &none   				&none &none  &none  &none &none   
					 &trans &trans  					&trans &trans 
		>;
		};	
    
        special_letters_layer {
		bindings = <
		&none  &none    &none    &none    &none 			&none &none   &none   &kp DE_UE  &none
		&none &kp DE_SS &none &none &none  						&none &none  &kp DE_AE &none &kp DE_OE 
		&none  &kp DE_DLR &none &none &none   				&none &none  &none  &none &none   
					 &trans &trans  					&kp DE_EURO &trans 
		>;
		};	
         	
	};
};
